import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { Link } from "react-router-dom";
import { changeQuantity } from "../../features/cart/cartSlice";
import { RiDeleteBinFill } from "react-icons/ri";

const EditInvoice = () => {
  const cart = useSelector((state) => state.cart.cart);
  const dispatch = useDispatch();

  const handleChange = (product) => {
    dispatch(changeQuantity(product));
  };

    return (
      <div className="relative overflow-x-auto w-full bg-secondary-700 rounded-md p-6">
        <table className="table-auto text-left w-full text-neural-400 ">
          <thead className="text-base tracking-widest text-gray-700 uppercase bg-secondary-600">
            <tr className="border-x-secondary-500 p-5">
              <th className="px-6 py-3 font-medium">S.N.</th>
              <th className="px-6 py-3 font-medium">Medicine Info</th>
              <th className="px-6 py-3 font-medium">quantity</th>
              <th className="px-6 py-3 font-medium">total</th>
              <th className="px-6 py-3 font-medium">action</th>
            </tr>
          </thead>
          <tbody className="">
            {cart?.map((product, index) => (
              <tr key={product._id} className="border-b hover:bg-secondary-500">
                <td className="px-6 py-3 font-normal">{index + 1}</td>
                <td className="px-6 py-3 font-normal">
                  <p>
                    <b>Brand Name: </b>
                    {product?.brand}
                  </p>
                  <p>
                    <b>Generic Name: </b>
                    {product?.generic}
                  </p>
                  <p>
                    <b>Use For: </b>
                    {product?.useFor}
                  </p>
                  <p>
                    <b>Strength: </b>
                    {product?.strength.split("/")[0]}
                  </p>
                  <p>
                    <b>Manufacturer: </b>
                    {product?.manufacturer}
                  </p>
                  <p>
                    <b>ExpireDate: </b>
                    {product?.lastdate}
                  </p>
                </td>
                <td className="flex items-center h-60">
                  <div className="">
                    <input
                      onChange={(e) =>
                        handleChange({
                          ...product,
                          quantity: parseInt(e.target.value),
                        })
                      }
                      className="bg-primary-500 p-2 min-w-20 min-h-20 w-20 h-20 rounded-full outline-none text-xl text-center"
                      type="number"
                      name=""
                      id=""
                      min="1"
                      max={product?.totalProducts}
                      defaultValue={product?.quantity}
                    />
                  </div>
                </td>
                <td className="px-6 py-3 font-normal">
                  {product?.quantity * product?.price}
                </td>
                <td className="px-6 py-3 font-normal" onClick={dispatch(changeQuantity(product._id))}>
                  <RiDeleteBinFill className="hover:text-accent-400 text-2xl" />
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    );
};

export default EditInvoice;

  // if (cart.length === 0) {
  //   return (
  //     <div
  //       className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative"
  //       role="alert"
  //     >
  //       <strong className="font-bold">You don't add any product! </strong>
  //       <span className="block sm:inline">
  //         Go to product search and add product quantity. It will automatically
  //         add on cart
  //       </span>
  //       <span className="absolute top-0 bottom-0 right-0 px-4 py-3">
  //         <svg
  //           className="fill-current h-6 w-6 text-red-500"
  //           role="button"
  //           xmlns="http://www.w3.org/2000/svg"
  //           viewBox="0 0 20 20"
  //         >
  //           <title>Close</title>
  //           <path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z" />
  //         </svg>
  //       </span>
  //     </div>
  //   );
  // } else {
